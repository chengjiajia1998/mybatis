<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserMapper">
    <!--
        Mapper 接口开发的规范：
            1、 Mapper.xml 文件中的 namespace 与 mapper 接口的类路径相同。
            2、 Mapper 接口方法名和 Mapper.xml 中定义的每个 statement 的 id 相同
            3、 Mapper 接口方法的输入参数类型和 mapper.xml 中定义的每个 sql 的parameterType 的类型相同
            4、 Mapper 接口方法的输出参数类型和 mapper.xml 中定义的每个 sql 的resultType 的类型相同
    -->
    <select id="findAllUser" resultType="user">
        select * from user
    </select>

    <!--
        通过名字和地址进行查询

    <select id="findUserByNameAndAddress" parameterType="user" resultType="user">
        select *
        from user
        where 1 = 1
        <if test=" username !=null and username !='' ">
            and username like concat('%',#{username},'%')
        </if>
        <if test=" address !=null and address !='' ">
            and address like concat('%',#{address},'%')
        </if>
    </select>
    -->
    <!--
        where 标签

        where标签会将第一个条件的 and 去掉


    <select id="findUserByNameAndAddress" parameterType="user" resultType="user">
        select *
        from user
        <where>

            <if test=" username !=null and username !='' ">
                and username like concat('%',#{username},'%')
            </if>
            <if test=" address !=null and address !='' ">
                and address like concat('%',#{address},'%')
            </if>
        </where>
    </select>
-->
    <!--
        trim 标签：通过prefix=“where” prefixOverRides = "and"
    -->
    <select id="findUserByNameAndAddress" parameterType="user" resultType="user">
        select *
        from user
        <trim prefix="where" prefixOverrides="and">
            <if test=" username !=null and username !='' ">
                and username like concat('%',#{username},'%')
            </if>
            <if test=" address !=null and address !='' ">
                and address like concat('%',#{address},'%')
            </if>
        </trim>
    </select>


    <!--
        通过名字或者地址进行查询,或者性别
            choose
            when
    -->

    <select id="findUserByNameOrAddressOrSex" parameterType="user" resultType="user">
        select *
        from user
        where 1 = 1
        <choose>
            <when test=" username !=null and username !='' ">
                and username like concat('%',#{username},'%')
            </when>
            <when test=" address !=null and address !='' ">
                and address like concat('%',#{address},'%')
            </when>
            <otherwise>
                and sex = #{sex}
            </otherwise>
        </choose>

    </select>

    <!--
        set标签：
    -->
    <update id="updateUser" parameterType="user">
        update user
        <set>
            <if test=" username !=null and username !='' ">
                username = #{username} ,
            </if>
            <if test=" address !=null and address !='' ">
                address =#{address},
            </if>
        </set>
        where id=#{id}

    </update>

    <!--
        bind标签：绑定属性名
        通过bind标签绑定一个变量名 value="'%'+实体类中的属性名+'%'"；
        <bind name="u_name" value="'%'+username+'%'"/>
    -->


    <select id="findUserByName" parameterType="user" resultType="user">

        <bind name="u_name" value="'%'+username+'%'"/>

        select *
        from user
        where username like #{u_name}
    </select>


    <!--
        使用foreach 标签
        查  询 ID=  10  16 27三个用户

        报错原因：Parameter 'ids' not found. Available parameters are [array]
                 Parameter 'array' not found. Available parameters are [list]
                 Parameter 'ids' not found. Available parameters are [list]

        当foreach循环遍历的对象为 数组时  collection属性为 array  这是固定的
        当foreach循环遍历的对象为 List时  collection属性为 list   这是固定的

        数组是： ids_arr  ===> ids_arrMap.put("array",ids_arr);
        集合为： ids_list ===> ids_listMap.put("list",ids_list);

    -->

    <select id="findUserByIds" resultType="User">
        select * from user
        where id in
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <!--
        通过vo查询


    -->

    <select id="findUserByVo" parameterType="vo.UserVo" resultType="user">
        select *
        from user
        <where>

            <if test=" user.username !=null and user.username !='' ">
                and username like concat('%',#{user.username},'%')
            </if>
            <if test=" user.address !=null and user.address !='' ">
                and address like concat('%',#{user.address},'%')
            </if>
        </where>
    </select>


    <!--
        通过vo查询：
        使用通过vo 属性里面放 array或者list,collection属性的值为array类型和list类型的那个属性名；

        此时如果 collection="list" 报如下错误
        There is no getter for property named 'list' in 'class vo.UserVo'
        此时如果 collection="array" 报如下错误
        There is no getter for property named 'array' in 'class vo.UserVo'


        //mybatis方放数据的时候不是将user对象直接存入，他是将User对象转换为一个map存放进去了；
        map（key，value）
        user     Map mapUser ==>  mapUser.put("user的属性名"，'user.属性值') ==> mapUser.put("username"，user.getUsername()).put("id",uid).put("address",user.getAddress())
    -->
    <select id="findUserByVo1" parameterType="vo.UserVo" resultType="user">
        select *
        from user
        where id in
        <foreach collection="idss" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <select id="findUserByIdsMap" resultType="user">
        select *
        from user
        where id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

</mapper>


